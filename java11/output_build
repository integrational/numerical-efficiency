#1 [internal] load build definition from Dockerfile
#1 sha256:92c0ca518c73428e7258421ebe2a53a870f954907693d2500e8decd552bc8352
#1 transferring dockerfile: 365B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:662c74dc82d47607701f4e03790f42b156f0a6d43eb9867c345df3369cb5cfc8
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/openjdk:11
#3 sha256:87dc9b3cee4adf6787fd792601b37fcaad0ed6bd5314a02f15c26446f91634ad
#3 ...

#4 [auth] library/openjdk:pull token for registry-1.docker.io
#4 sha256:843f79aa62416dbb86b1dad78c6baabc0690b510ad283a299ddea9821f8aa55a
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/openjdk:11
#3 sha256:87dc9b3cee4adf6787fd792601b37fcaad0ed6bd5314a02f15c26446f91634ad
#3 DONE 2.5s

#9 [internal] load build context
#9 sha256:d7e7a18e7ce14ad0e378a40c9dc594013293388136f53321482ebc5cc5ab3010
#9 transferring context: 5.51kB done
#9 DONE 0.0s

#5 [stage-1 1/3] FROM docker.io/library/openjdk:11@sha256:37bc6f49ac60d271cf0d7d999db157297e5a7d1cc434cfa5932f81a4ae760215
#5 sha256:23bbb44a9761a149cec449b7c80157eb50ea5133733ec512cfc33ca59b07ded4
#5 resolve docker.io/library/openjdk:11@sha256:37bc6f49ac60d271cf0d7d999db157297e5a7d1cc434cfa5932f81a4ae760215 done
#5 sha256:da20b77f10accb6bbe77d0a222b481d7a083efa84c2cb9ee752723ad4fca2cf4 0B / 5.29MB 0.1s
#5 sha256:8669a096f083b397ec8949a2da592616f90bbd22bd612927db3becd457747829 0B / 211B 0.1s
#5 sha256:37bc6f49ac60d271cf0d7d999db157297e5a7d1cc434cfa5932f81a4ae760215 1.04kB / 1.04kB done
#5 sha256:5d5348cd44fed9afafd5bd7e7654a881110b73a193cdff104bb168b424e616c2 1.79kB / 1.79kB done
#5 sha256:a9c7e4ad6720e469b266bb556a8b2f12ed2974ff4d884c0f390d432eae5b1236 6.28kB / 6.28kB done
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 0B / 202.93MB 0.1s
#5 sha256:8669a096f083b397ec8949a2da592616f90bbd22bd612927db3becd457747829 211B / 211B 0.3s done
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 10.49MB / 202.93MB 3.0s
#5 sha256:da20b77f10accb6bbe77d0a222b481d7a083efa84c2cb9ee752723ad4fca2cf4 1.05MB / 5.29MB 4.0s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 20.97MB / 202.93MB 5.0s
#5 sha256:da20b77f10accb6bbe77d0a222b481d7a083efa84c2cb9ee752723ad4fca2cf4 2.10MB / 5.29MB 6.3s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 31.46MB / 202.93MB 7.3s
#5 sha256:da20b77f10accb6bbe77d0a222b481d7a083efa84c2cb9ee752723ad4fca2cf4 3.15MB / 5.29MB 8.1s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 41.94MB / 202.93MB 9.1s
#5 sha256:da20b77f10accb6bbe77d0a222b481d7a083efa84c2cb9ee752723ad4fca2cf4 4.19MB / 5.29MB 10.6s
#5 sha256:da20b77f10accb6bbe77d0a222b481d7a083efa84c2cb9ee752723ad4fca2cf4 5.29MB / 5.29MB 11.9s done
#5 extracting sha256:da20b77f10accb6bbe77d0a222b481d7a083efa84c2cb9ee752723ad4fca2cf4
#5 extracting sha256:da20b77f10accb6bbe77d0a222b481d7a083efa84c2cb9ee752723ad4fca2cf4 0.3s done
#5 extracting sha256:8669a096f083b397ec8949a2da592616f90bbd22bd612927db3becd457747829 done
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 52.43MB / 202.93MB 13.4s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 62.91MB / 202.93MB 17.5s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 73.40MB / 202.93MB 22.0s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 83.89MB / 202.93MB 25.8s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 93.32MB / 202.93MB 30.8s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 103.81MB / 202.93MB 35.2s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 114.29MB / 202.93MB 38.6s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 124.78MB / 202.93MB 42.2s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 135.27MB / 202.93MB 45.9s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 145.75MB / 202.93MB 49.3s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 156.24MB / 202.93MB 52.9s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 166.72MB / 202.93MB 56.0s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 177.21MB / 202.93MB 58.9s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 187.70MB / 202.93MB 61.7s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 198.18MB / 202.93MB 65.7s
#5 sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 202.93MB / 202.93MB 67.1s done
#5 extracting sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603
#5 extracting sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 5.0s
#5 extracting sha256:e0c0a5e9ce88aa01049ae5788512abb561b34cf649940e8a87cb58f14919f603 5.4s done
#5 DONE 72.7s

#7 [builder 2/6] RUN javac -version
#7 sha256:9d21e671e4fe7b6adbfa994315ba099b2821e7008f530f589775afcaebb0417b
#7 ...

#6 [stage-1 2/3] WORKDIR /app
#6 sha256:63ea99b41f4c7091c031d925e57bf3584206e82666c974a10c79fd40187989b7
#6 DONE 0.2s

#7 [builder 2/6] RUN javac -version
#7 sha256:9d21e671e4fe7b6adbfa994315ba099b2821e7008f530f589775afcaebb0417b
#7 0.762 javac 11.0.11
#7 DONE 0.8s

#8 [builder 3/6] WORKDIR /app
#8 sha256:22ccf78a4a3d05a3e6a90baa650f4db2c6ecf9f91f62cc67bf15cae66cf14f51
#8 DONE 0.0s

#10 [builder 4/6] COPY . .
#10 sha256:7f40d733c930be96be9d6e5fb996addbe2594eae5d4ab00e180d9e4915d0a005
#10 DONE 0.0s

#11 [builder 5/6] RUN javac *.java
#11 sha256:0324c1f760f2c70c9faf8b0d5fe1aecfc617e6da9afb2349859fafbb30d2b0e3
#11 DONE 1.3s

#12 [builder 6/6] RUN jar cvfe app.jar SquareRoot *.class
#12 sha256:a65abfb82edfa5a91e5ce9f1f75faab691c7aba9ae96502d8da96d597a6f324a
#12 0.463 added manifest
#12 0.498 adding: SquareRoot$Result.class(in = 391) (out= 291)(deflated 25%)
#12 0.499 adding: SquareRoot.class(in = 2445) (out= 1385)(deflated 43%)
#12 DONE 0.5s

#13 [stage-1 3/3] COPY --from=builder /app/app.jar .
#13 sha256:2ff96e288d39111c33189fac617e5ab92ace778c2edf4efec69e4a4015bc0b3b
#13 DONE 0.0s

#14 exporting to image
#14 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#14 exporting layers 0.0s done
#14 writing image sha256:791d75627e0e41e450f6b430f4e8a74f429b4caae55f0170f1ff62617fcc2982 done
#14 naming to docker.io/library/square-root-java11 done
#14 DONE 0.1s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
