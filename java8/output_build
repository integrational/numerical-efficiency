#1 [internal] load build definition from Dockerfile
#1 sha256:eb169638468b982f2e98b7c85c5adaac90dbbe1f2c3296bcd9383ad53f43ed39
#1 transferring dockerfile: 370B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:32cd6bf46dcd669f83356cfaf3aa74744f0d73371de78084c023c57372aae7fc
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/openjdk:8
#3 sha256:c1006613b124ab347fbb29ae49e2ab62add271baf34bdfe7a7a4c383ac159b76
#3 DONE 0.8s

#4 [builder 1/6] FROM docker.io/library/openjdk:8@sha256:840e786513eac99c76c7e57fe26d74ff17cb5715e7c145cb5bee6fca23020f9d
#4 sha256:59c5edda93597e419e0d60223bb4fa0da24e027f2c90e8214a36a63200c3c5b7
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:6d77993286986a56c91a33dc009284a3482e57c5043e6186caff6d8015796827
#8 transferring context: 6.03kB done
#8 DONE 0.0s

#6 [builder 2/6] RUN javac -version
#6 sha256:18fc49929d953c563b5c7a90e6e8a66e979b6158b17a571ffcb286f14b325470
#6 CACHED

#7 [builder 3/6] WORKDIR /app
#7 sha256:ca1e8a40e6ea67d9d7447596cd113043dd042bf6343f30a0d7e9173308e8b978
#7 CACHED

#9 [builder 4/6] COPY . .
#9 sha256:c2e63455995e287e28a4a584dc6530afbd394b6f64d9d67d5ff6bb3fbe5db649
#9 DONE 0.0s

#10 [builder 5/6] RUN javac *.java
#10 sha256:0b857187a43e9330a1e914d98866d4a02ed9bad7e25bd940366f8895cb6c2ef1
#10 DONE 1.3s

#11 [builder 6/6] RUN jar cvfe app.jar SquareRoot *.class
#11 sha256:99f467204b2d796262d6e8e4d8461e7828bdbb4784df8f40196a36c413d9ce01
#11 0.594 added manifest
#11 0.616 adding: SquareRoot$Result.class(in = 372) (out= 274)(deflated 26%)
#11 0.617 adding: SquareRoot.class(in = 3170) (out= 1822)(deflated 42%)
#11 DONE 0.6s

#5 [stage-1 2/3] WORKDIR /app
#5 sha256:b28002b25e3bd5eb53cbcc85bb70a4b601b8a3a287bfafdd6efb43548b864244
#5 CACHED

#12 [stage-1 3/3] COPY --from=builder /app/app.jar .
#12 sha256:77ba398d7ae3e4caf9bf74b3bfce9eacfb65a98132be030b99ce2465f0a8d0b2
#12 DONE 0.0s

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers 0.0s done
#13 writing image sha256:326188b776ffcfcbbee1b4081b5e29da3bf2a56acff55542d7ec8a9ed3430c48 done
#13 naming to docker.io/library/square-root-java8 done
#13 DONE 0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
